services:
  postgres:
    image: 'postgres:16'
    container_name: 'postgres'
    command: "postgres -c wal_level=logical"
    environment:
      - POSTGRES_USER=application
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=accounts_db
      - PGPASSWORD=secret
    ports:
      - '5432:5432'
    healthcheck:
      test: "pg_isready -U application -d accounts_db"
      interval: 2s
      timeout: 20s
      retries: 10

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    container_name: zookeeper-accounts
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: "echo stat | nc localhost $$ZOOKEEPER_CLIENT_PORT"

  kafka:
    image: confluentinc/cp-kafka:7.4.1
    container_name: kafka-accounts
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]

  debezium:
    image: quay.io/debezium/connect:2.4.1.Final
    container_name: debezium-accounts
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_PORT: 8083
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      CONNECT_CONFIG_PROVIDERS: file
      CONNECT_CONFIG_PROVIDERS_FILE_CLASS: org.apache.kafka.common.config.provider.FileConfigProvider
    restart: unless-stopped
    depends_on:
      - kafka
      - postgres
    ports:
      - "8083:8083"
    volumes:
      - "./connector/secrets:/etc/secrets"
    healthcheck:
      test: "curl -f http://localhost:$$CONNECT_REST_PORT || exit 1"

  kafka-connect-ui:
    image: landoop/kafka-connect-ui:0.9.7
    container_name: kafka-connect-ui-accounts
    restart: unless-stopped
    depends_on:
      - debezium
    ports:
      - "8086:8000"
    environment:
      CONNECT_URL: http://debezium:8083
      PROXY: "true"
    healthcheck:
      test: "wget --quiet --tries=1 --spider http://localhost:8000 || exit 1"

  kafdrop:
    image: obsidiandynamics/kafdrop:3.30.0
    container_name: kafdrop
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    healthcheck:
      test: "curl -f http://localhost:9000 || exit 1"
